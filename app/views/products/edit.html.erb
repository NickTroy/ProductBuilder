<script type="text/javascript">

function convertImgToDataURLviaCanvas(url, callback){
    var img = new Image();
    img.crossOrigin = 'Anonymous';
    img.onload = function(){
        var canvas = document.createElement('CANVAS');
        var ctx = canvas.getContext('2d');
        var dataURL;
        canvas.height = this.height;
        canvas.width = this.width;
        ctx.drawImage(this, 0, 0);
        dataURL = canvas.toDataURL();
        callback(dataURL);
        canvas = null; 
    };
    img.src = url;
}

function insertBase64(dataUrl) {
  if ($('#images').attr('value') === "") {
    $('#images').attr('value', "");
  } else {
    images = $('#images').attr('value');
    $('#images').attr('value', images + ',' + dataUrl);
  }
}

$(document).ready(function(){
  Dropzone.autoDiscover = false;
  $("#file-form").dropzone({
    url: '<%= images_path %>',
    paramName: 'images',
    clickable: true,
    uploadMultiple: false,
    autoProcessQueue: false,
    addRemoveLinks: true,
    accept: function(file, done){
      reader = new FileReader();
      reader.onload = handleReaderLoad;
      reader.readAsDataURL(file);
      function handleReaderLoad(evt) {
        document.getElementById("image_url")
                .setAttribute('value', evt.target.result.split(',')[1]);
        document.getElementById("image_name")
                .setAttribute('value', file.name);
        form = $('#file-form');
        $.ajax( {
          method: "POST",
          timeout: 2000,
          url: "<%= images_path %>",
          data: form.serialize(),
        });
      }
      done();
    },
    init: function() {
      var existingFiles = [];
      <% @images.each_with_index do |image, index| %>
        existingFiles.push({ id: "<%= image.id %>"});
        this.emit("addedfile", existingFiles[<%= index %>]);
        this.emit("thumbnail", existingFiles[<%= index %>], "<%= image.src %>");
      <% end %>
      
      this.on("removedfile", function(file){
        console.log(file);
        $.ajax( {
          method: "DELETE",
          timeout: 2000,
          url: "/images/" + file.id,
          data: { image_id: file.id, product_id: <%= @product.id%> }
        });
      });
    }
  });
});


</script>

<%= form_tag product_path, method: "patch", :html => { :controller => "products", :action => "update", :id => @product.id } do %>


<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[title]', "Product title:" %>
    <%= text_field_tag :title, @product.title %>
  </div>

</div>  

<div class="row">
  <div class="col-md-12">
    <%= label_tag 'product[body_html]', "Product description:" %>
    <%= text_area_tag :body_html, @product.body_html, class: "tinymce" %>
    <%= tinymce %>      
  </div>
</div>

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[type]', "Product type:" %>
    <%= text_field_tag :product_type, @product.product_type %>
  </div>

</div>  

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[published_scope]', "Product published scope:" %>
    <%= text_field_tag :published_scope, @product.published_scope %>
  </div>

</div> 

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[vendor]', "Product vendor:" %>
    <%= text_field_tag :vendor, @product.vendor %>
  </div>

</div> 







    

<div class="row">
  <div class="col-md-2">
    <%= submit_tag "Save", :class => "btn btn-success" %>
  </div>
</div>



<% end %>

<form class="dropzone" id="file-form" action="<%= images_path %>" method="post" name="file-form">
    <input id="image_url" name="image_url" type="hidden">
    <input id="image_name" name="image_name" type="hidden">
    <input id="product_id" name="product_id" value="<%= @product.id %>" type="hidden">
    <div class="fileupload fileupload-new" data-provides="fileupload">
        <legend>Search for file</legend>
    </div>
<div class="dz-default dz-message"><span>Drop files here to upload</span></div> 
</form>