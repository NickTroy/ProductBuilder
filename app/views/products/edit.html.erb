<script type="text/javascript">

function convertImgToDataURLviaCanvas(url, callback){
    var img = new Image();
    img.crossOrigin = 'Anonymous';
    img.onload = function(){
        var canvas = document.createElement('CANVAS');
        var ctx = canvas.getContext('2d');
        var dataURL;
        canvas.height = this.height;
        canvas.width = this.width;
        ctx.drawImage(this, 0, 0);
        dataURL = canvas.toDataURL();
        callback(dataURL);
        canvas = null; 
    };
    img.src = url;
}

function insertBase64(dataUrl) {
  if ($('#images').attr('value') === "") {
    $('#images').attr('value', "");
  } else {
    images = $('#images').attr('value');
    $('#images').attr('value', images + ',' + dataUrl);
  }
}

$(document).ready(function () {
Dropzone.autoDiscover = false;
  
  $("#my-awesome-dropzone").dropzone({ 
    url: "/",
    autoProcessQueue: false,
    uploadMultiple: true,
    parallelUploads: 100,
    maxFiles: 100,
    addRemoveLinks: true,
    previewsContainer: ".dropzone-previews",
    accept: function(file, done){
      reader = new FileReader();
      reader.onload = handleReaderLoad;
      reader.readAsDataURL(file);
      function handleReaderLoad(evt) {
        var images = document.getElementById("images")
                             .getAttribute('value');
        if (images === null) {
          images = "";
        }
        document.getElementById("images")
                .setAttribute('value', images + ',' + evt.target.result.split(',')[1]);
      }
      done();  
    },

    init: function() {
      var myDropzone = this;
      var existingFiles = [];
      <% @images.each_with_index do |image, index| %>
        existingFiles.push({ name: "image<%= index %>"});
        this.emit("addedfile", existingFiles[<%= index %>]);
        this.emit("thumbnail", existingFiles[<%= index %>], "<%= image.src %>");
        convertImgToDataURLviaCanvas("<%= image.src %>", insertBase64);
      <% end %>
      this.on("removedfile", function(file){
        console.log(file);
        //var reader = new FileReader();
        //reader.readAsDataURL(file);
        //reader.onload = (function (result){
          //alert(result);
        //}); 
      });
    }
  });
});
</script>

<%= form_tag product_path, method: "patch", :html => { :controller => "products", :action => "update", :id => @product.id } do %>


<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[title]', "Product title:" %>
    <%= text_field_tag :title, @product.title %>
  </div>

</div>  

<div class="row">
  <div class="col-md-12">
    <%= label_tag 'product[body_html]', "Product description:" %>
    <%= text_area_tag :body_html, @product.body_html, class: "tinymce" %>
    <%= tinymce %>      
  </div>
</div>

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[type]', "Product type:" %>
    <%= text_field_tag :product_type, @product.product_type %>
  </div>

</div>  

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[published_scope]', "Product published scope:" %>
    <%= text_field_tag :published_scope, @product.published_scope %>
  </div>

</div> 

<div class="row">
  
  <div class="col-md-12">
    <%= label_tag 'product[vendor]', "Product vendor:" %>
    <%= text_field_tag :vendor, @product.vendor %>
  </div>

</div> 

<div class="row">
  <div class="dropzone" id="my-awesome-dropzone">
    <div class="dropzone-previews">
      <input type="hidden" id="images" name="images" />        
    </div>  
  </div>
  
</div>



    

<div class="row">
  <div class="col-md-2">
    <%= submit_tag "Save", :class => "btn btn-success" %>
  </div>
</div>



<% end %>